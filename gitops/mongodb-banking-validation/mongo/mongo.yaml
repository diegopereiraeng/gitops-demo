apiVersion: mongodbcommunity.mongodb.com/v1 
kind: MongoDBCommunity 
metadata: 
  name: mongo-replicaset 
  namespace: prod 
spec: 
  members: 3 
  type: ReplicaSet 
  version: "5.0.2" 
  prometheus: ""
  replicaSetHorizons: 
  - horizon: mongo-replicaset-0.com:27017 
  - horizon: mongo-replicaset-1.com:27017 
  - horizon: mongo-replicaset-2.com:27017 
  security: 
    tls: 
      enabled: true 
      certificateKeySecretRef: 
        name: mongodb-tls 
      caConfigMapRef: 
        name: ca-config-map 

    authentication: 
      modes: ["SCRAM"] 
  users: 
    - name: admin 
      db: admin 
      privileges:
          - resource:
              db: "local"
              collection: "" # an empty string indicates any collection
      passwordSecretRef: # a reference to the secret that will be used to generate the user's password 
        name: admin-password 
      roles: 
        - name: clusterAdmin 
          db: admin 
        - name: userAdminAnyDatabase 
          db: admin 
        - name: root 
          db: admin 
        - name: clusterMonitor 
          db: admin 
        - name: read 
          db: local 
      scramCredentialsSecretName: admin-scram 
    - name: dumpUser 
      db: admin 
      passwordSecretRef: # a reference to the secret that will be used to generate the user's password 
        name: dumpuser-password 
      roles: 
        - name: readWriteAnyDatabase 
          db: admin 
      scramCredentialsSecretName: dumpuser-scram 
  additionalMongodConfig: 
    storage.wiredTiger.engineConfig.journalCompressor: zlib 
  statefulSet: 
    spec: 
      volumeClaimTemplates: 
        - metadata: 
            name: data-volume 
          spec: 
            storageClassName: mongodb-ssd-storage 
            accessModes: [ "ReadWriteOnce" ] 
            resources: 
              requests: 
                storage: 2Gi 
--- 
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: mongodb-ssd-storage
provisioner: kubernetes.io/gce-pd
parameters:
  type: pd-ssd
volumeBindingMode: Immediate
---
apiVersion: v1 
kind: Secret 
metadata: 
  name: admin-password 
  namespace: prod 
type: Opaque 
stringData: 
  password: harnessrootpassword 
--- 
apiVersion: v1 
kind: Secret 
metadata: 
  name: dumpuser-password 
  namespace: prod 
type: Opaque 
stringData: 
  password: password 
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  annotations:

  # This needs to match `spec.ServiceMonitorSelector.matchLabels` from your
  # `prometheuses.monitoring.coreos.com` resouce.
  labels:
    release: prometheus

  name: mongodb-sm
  namespace: prod
spec:

    # This port matches what we created in our MongoDB Service.
    port: prometheus

    # If using HTTPS enabled endpoint, change scheme to https
    scheme: http

    # Configure different TLS related settings. For more information, see:
    # https://github.com/prometheus-operator/prometheus-operator/blob/main/pkg/apis/monitoring/v1/types.go#L909
    # tlsConfig:
    #    insecureSkipVerify: true

  # What namespace to watch
  namespaceSelector:
    matchNames:
    - prod

  # Service labels to match
  selector:
    matchLabels:
      app: mongodb-svc