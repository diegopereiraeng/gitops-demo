pipeline:
  name: aws-secrets-harness-cloud
  identifier: awssecretsharnesscloud
  projectIdentifier: Utilities
  orgIdentifier: SE_Sandbox
  tags: {}
  stages:
    - stage:
        name: Terraform AWS Secrets
        identifier: Terraform_AWS_Secrets
        type: CI
        spec:
          cloneCodebase: true
          execution:
            steps:
              - step:
                  name: AWS Secrets
                  identifier: AWS_Secrets
                  template:
                    templateRef: AWS_Secrets
                    versionLabel: 1.0.0
              - parallel:
                  - step:
                      type: Plugin
                      name: Terraform Plan
                      identifier: Terraform_Plan
                      spec:
                        connectorRef: account.DockerHubDiego
                        image: jmccann/drone-terraform:latest
                        settings:
                          plan: "true"
                          vars: "{\"orgId\":\"SE_Sandbox\",\"projectId\":\"Utilities\",\"gitUser\":\"<+secrets.getValue(\"segredo_diego\")>\",\"accId\":\"<+secrets.getValue(\"harness_acc_id\")>\",\"apiKey\":\"<+secrets.getValue(\"harness_pat\")>\"}"
                          root_dir: banking-demo-onboarding/
                  - step:
                      type: Run
                      name: Read Secrets Anywhere
                      identifier: Read_Secrets_Anywhere
                      spec:
                        shell: Sh
                        command: |-
                          echo <+secrets.getValue("prod_secret_mongo")>

                          TEST=<+secrets.getValue("prod_secret_mongo")>

                          echo <+json.object($TEST).mongo> 
                        envVariables:
                          test1: <+secrets.getValue("prod_secret_mongo").mongo>
                      failureStrategies:
                        - onFailure:
                            errors:
                              - AllErrors
                            action:
                              type: MarkAsSuccess
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
  properties:
    ci:
      codebase:
        connectorRef: account.diegogithubapp
        repoName: terraform-onboarding-payments-validation
        build: <+input>
