pipeline:
  name: MOBILE - IOS Harness Mobile
  identifier: IOS_DevOps_Mobile
  projectIdentifier: GIT_FLOW_DEMO
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: account.Diego_Git
        repoName: ios_harness_demo
        build: <+input>
  stages:
    - stage:
        name: Build and Publish to TestFlight - IOS
        identifier: Build_IOS
        type: CI
        spec:
          cloneCodebase: true
          execution:
            steps:
              - step:
                  type: Run
                  name: Install Certificates
                  identifier: Install_Certificates
                  spec:
                    shell: Sh
                    command: |-
                      # sudo gem install fastlane cocoapods addressable bundler
                      ls -ltra /Applications

                      security list-keychains
                      security find-identity -v -p codesigning

                      sudo gem install bundler

                      ruby -v

                      pod deintegrate

                      bundle install

                      keyfile="/private/tmp/harness/AuthKey.p8"

                      echo "creating key file"

                      echo '<+secrets.getValue("IOS_DEMO_P8_FILE")>' > $keyfile

                      echo "created key file"

                      export KEY_PATH=$keyfile

                      echo $KEY_PATH
                      pwd

                      bundle exec fastlane download_keys
                    privileged: true
                    envVariables:
                      FASTLANE_XCODEBUILD_SETTINGS_TIMEOUT: "30"
                      FASTLANE_XCODEBUILD_SETTINGS_RETRIES: "4"
                      APP_IDENTIFIER: <+secrets.getValue("IOS_DEMO_APP_IDENTIFIER")>
                      APPLE_ID: <+secrets.getValue("IOS_DEMO_APPLE_ID")>
                      FASTLANE_USER: <+secrets.getValue("IOS_DEMO_APPLE_ID")>
                      FASTLANE_PASSWORD: <+secrets.getValue("IOS_DEMO_FASTLANE_PASSWORD")>
                      FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: <+secrets.getValue("IOS_DEMO_FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD")>
                      ITC_TEAM_ID: <+secrets.getValue("IOS_DEMO_ITC_TEAM_ID")>
                      TEAM_ID: <+secrets.getValue("IOS_DEMO_TEAM_ID")>
                      WORKSPACE: HarnessMobile.xcworkspace
                      SCHEME: HarnessMobile
                      CONFIGURATION: "\"\""
                      MATCH_PASSWORD: <+secrets.getValue("IOS_DEMO_MATCH_PASSWORD")>
                      MATCH_KEYCHAIN_PASSWORD: <+secrets.getValue("IOS_DEMO_MATCH_PASSWORD")>
                      APP_STORE_CONNECT_APPLE_ID: <+secrets.getValue("IOS_DEMO_APP_STORE_CONNECT_APPLE_ID")>
                      LANG: en_US.UTF-8
                      LC_ALL: en_US.UTF-8
                      APP_STORE_CONNECT_API_KEY_ISSUER_ID: <+secrets.getValue("IOS_DEMO_ISSUER_ID")>
                      APP_STORE_CONNECT_API_KEY_KEY_ID: <+secrets.getValue("IOS_DEMO_API_KEY_ID")>
                      KEYCHAIN_PASSWORD: <+secrets.getValue("IOS_DEMO_KEYCHAIN_PASSWORD")>
                  when:
                    stageStatus: Success
                  failureStrategies:
                    - onFailure:
                        errors:
                          - AllErrors
                        action:
                          type: Ignore
              - step:
                  type: Run
                  name: Build IOS
                  identifier: Build_IOS
                  spec:
                    shell: Sh
                    command: |-
                      keyfile="/private/tmp/harness/AuthKey.p8"

                      echo "creating key file"

                      echo '<+secrets.getValue("IOS_DEMO_P8_FILE")>' > $keyfile

                      echo "created key file"

                      export KEY_PATH=$keyfile

                      echo $KEY_PATH
                      pwd

                      bundle exec fastlane build_ios device:"iPhone 14"
                    privileged: true
                    envVariables:
                      FASTLANE_XCODEBUILD_SETTINGS_TIMEOUT: "30"
                      FASTLANE_XCODEBUILD_SETTINGS_RETRIES: "4"
                      APP_IDENTIFIER: <+secrets.getValue("IOS_DEMO_APP_IDENTIFIER")>
                      APPLE_ID: <+secrets.getValue("IOS_DEMO_APPLE_ID")>
                      FASTLANE_USER: <+secrets.getValue("IOS_DEMO_APPLE_ID")>
                      FASTLANE_PASSWORD: <+secrets.getValue("IOS_DEMO_FASTLANE_PASSWORD")>
                      FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: <+secrets.getValue("IOS_DEMO_FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD")>
                      ITC_TEAM_ID: <+secrets.getValue("IOS_DEMO_ITC_TEAM_ID")>
                      TEAM_ID: <+secrets.getValue("IOS_DEMO_TEAM_ID")>
                      WORKSPACE: HarnessMobile.xcworkspace
                      SCHEME: HarnessMobile
                      CONFIGURATION: "\"\""
                      MATCH_PASSWORD: <+secrets.getValue("IOS_DEMO_MATCH_PASSWORD")>
                      MATCH_KEYCHAIN_PASSWORD: <+secrets.getValue("IOS_DEMO_MATCH_PASSWORD")>
                      APP_STORE_CONNECT_APPLE_ID: <+secrets.getValue("IOS_DEMO_APP_STORE_CONNECT_APPLE_ID")>
                      LANG: en_US.UTF-8
                      LC_ALL: en_US.UTF-8
                      APP_STORE_CONNECT_API_KEY_ISSUER_ID: <+secrets.getValue("IOS_DEMO_ISSUER_ID")>
                      APP_STORE_CONNECT_API_KEY_KEY_ID: <+secrets.getValue("IOS_DEMO_API_KEY_ID")>
                      KEYCHAIN_PASSWORD: <+secrets.getValue("IOS_DEMO_KEYCHAIN_PASSWORD")>
                  when:
                    stageStatus: Success
                  failureStrategies:
                    - onFailure:
                        errors:
                          - AllErrors
                        action:
                          type: Ignore
              - step:
                  type: Run
                  name: Upload to TestFlight IOS
                  identifier: Upload_TestFlight
                  spec:
                    shell: Sh
                    command: |-


                      keyfile="/private/tmp/harness/AuthKey.p8"

                      echo "creating key file"

                      echo '<+secrets.getValue("IOS_DEMO_P8_FILE")>' > $keyfile

                      echo "created key file"


                      export KEY_PATH=$keyfile

                      echo $KEY_PATH
                      pwd

                      bundle exec fastlane upload_testflight
                    privileged: true
                    envVariables:
                      FASTLANE_XCODEBUILD_SETTINGS_TIMEOUT: "30"
                      FASTLANE_XCODEBUILD_SETTINGS_RETRIES: "4"
                      APP_IDENTIFIER: <+secrets.getValue("IOS_DEMO_APP_IDENTIFIER")>
                      APPLE_ID: <+secrets.getValue("IOS_DEMO_APPLE_ID")>
                      FASTLANE_USER: <+secrets.getValue("IOS_DEMO_APPLE_ID")>
                      FASTLANE_PASSWORD: <+secrets.getValue("IOS_DEMO_FASTLANE_PASSWORD")>
                      FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: <+secrets.getValue("IOS_DEMO_FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD")>
                      ITC_TEAM_ID: <+secrets.getValue("IOS_DEMO_ITC_TEAM_ID")>
                      TEAM_ID: <+secrets.getValue("IOS_DEMO_TEAM_ID")>
                      WORKSPACE: HarnessMobile.xcworkspace
                      SCHEME: HarnessMobile
                      CONFIGURATION: "\"\""
                      MATCH_PASSWORD: <+secrets.getValue("IOS_DEMO_MATCH_PASSWORD")>
                      MATCH_KEYCHAIN_PASSWORD: <+secrets.getValue("IOS_DEMO_MATCH_PASSWORD")>
                      APP_STORE_CONNECT_APPLE_ID: <+secrets.getValue("IOS_DEMO_APP_STORE_CONNECT_APPLE_ID")>
                      LANG: en_US.UTF-8
                      LC_ALL: en_US.UTF-8
                      APP_STORE_CONNECT_API_KEY_ISSUER_ID: <+secrets.getValue("IOS_DEMO_ISSUER_ID")>
                      APP_STORE_CONNECT_API_KEY_KEY_ID: <+secrets.getValue("IOS_DEMO_API_KEY_ID")>
                      KEYCHAIN_PASSWORD: <+secrets.getValue("IOS_DEMO_KEYCHAIN_PASSWORD")>
                  when:
                    stageStatus: Success
                  failureStrategies:
                    - onFailure:
                        errors:
                          - AllErrors
                        action:
                          type: Ignore
              - step:
                  type: Run
                  name: Logs
                  identifier: Logs
                  spec:
                    shell: Sh
                    command: cat /Users/anka/Library/Logs/gym/HarnessMobile-HarnessMobile.log
                  when:
                    stageStatus: All
                  failureStrategies: []
          platform:
            os: MacOS
            arch: Arm64
          runtime:
            type: Cloud
            spec: {}
