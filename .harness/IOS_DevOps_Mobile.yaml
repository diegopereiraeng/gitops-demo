pipeline:
  name: MOBILE - IOS Harness Mobile
  identifier: IOS_DevOps_Mobile
  projectIdentifier: GIT_FLOW_DEMO
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: account.Diego_Git
        repoName: ios_harness_demo
        build: <+input>
  stages:
    - stage:
        name: Build and Publish to TestFlight - IOS
        identifier: Build_IOS
        type: CI
        spec:
          cloneCodebase: true
          execution:
            steps:
              - step:
                  type: Run
                  name: Certificates - Build and Upload to TestFlight IOS
                  identifier: Build_IOS
                  spec:
                    shell: Sh
                    command: |-
                      # sudo gem install fastlane cocoapods addressable bundler
                      ls -ltra /Applications
                      security list-keychains
                      security find-identity -v -p codesigning
                      security unlock-keychain -p changeme /Users/anka/Library/Keychains/login.keychain-db
                      sudo gem install bundler
                      ruby -v
                      pod deintegrate
                      bundle install
                      # bundle exec fastlane install_dependencies
                      keyfile="/private/tmp/harness/AuthKey.p8"
                      echo "creating key file"
                      echo '<+secrets.getValue("IOS_DEMO_P8_FILE")>' > $keyfile
                      echo "created key file"
                      export KEY_PATH=$keyfile
                      echo $KEY_PATH
                      pwd
                      # bundle update
                      # bundle exec fastlane install_plugins
                      # platform :ios do
                      #   desc "Build the app"
                      #   lane :build do
                      #     cocoapods(
                      #       clean: true,
                      #       repo_update: true
                      #     )
                      #     keyfile="/private/tmp/harness/AuthKey.p8"
                      #     sh "echo 'creating key file'"
                      #     sh "echo '<+secrets.getValue(\"apple_store_developer_apikey\")>' > #{keyfile}"
                      #     sh "echo 'created key file'"
                      #     sh "pwd"
                      #     sh "ls -ltra"
                      #     sh "echo 'building'"
                      #     gym(
                      #       workspace: "PlatformDevops.xcworkspace",
                      #       scheme: "PlatformDevops",
                      #       configuration: "Release",
                      #       export_options: {
                      #         authenticationKeyPath: keyfile,
                      #         authenticationKeyID: "<+secrets.getValue(\"apple_store_api_key\")>",
                      #         authenticationKeyIssuerID: "<+secrets.getValue(\"apple_store_issuer_id\")>",
                      #         allowProvisioningUpdates: true
                      #       }
                      #     )
                      #     sh "echo 'archiving'"
                      #     archive(
                      #       workspace: "PlatformDevops.xcworkspace",
                      #       scheme: "PlatformDevops",
                      #       configuration: "Release",
                      #       export_archive: true,
                      #       export_options: {
                      #         exportPath: "./Artifact/PlatformDevops.ipa",
                      #         exportOptionsPlist: "HarnessConfig.plist"
                      #       }
                      #     )
                      #     sh "echo 'publishing'"
                      #     upload_to_app_store(
                      #       ipa: "./Artifact/PlatformDevops.ipa"
                      #     )
                      #     sh "ls -ltra ./Artifact"
                      #   end
                      # end
                      # cat fastlane/Fastfile
                      # rm -f fastlane/Fastfile
                      # cat <<EOF >>fastlane/Fastfile
                      # platform :ios do
                      #   before_all do
                      #     ENV['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
                      #   end
                      #   lane :deintegrate do
                      #   pod_deintegrate(
                      #     podfile: "./Podfile",
                      #     verbose: true
                      #   )
                      #   end
                      #   desc "Push a new beta build to TestFlight"
                      #   lane :beta do
                      #     ENV["IPHONEOS_DEPLOYMENT_TARGET"] = "13.0"
                      #     increment_build_number(xcodeproj: "PlatformDevops.xcodeproj")
                      #     build_app(
                      #       workspace: "PlatformDevops.xcworkspace",
                      #       scheme: "PlatformDevops",
                      #       sdk: "iphoneos",
                      #       export_xcargs: "-allowProvisioningUpdates",
                      #       xcargs: "-allowProvisioningUpdates"
                      #     )
                      #     api_key = app_store_connect_api_key(
                      #       key_id: "<+secrets.getValue("apple_store_api_key")>",
                      #       issuer_id: "<+secrets.getValue("apple_store_issuer_id")>",
                      #       key_filepath: keyfile,
                      #       duration: 1200, # optional (maximum 1200)
                      #       in_house: false # optional but may be required if using match/sigh
                      #     )
                      #     app_identifier = "com.devopsmobile.PlatformDevops"
                      #     upload_to_testflight(
                      #       api_key: api_key,
                      #       app_identifier: app_identifier,
                      #       skip_submission: true
                      #     )
                      #   end
                      #   desc "Install dependencies"
                      #   lane :install_dependencies do
                      #     cocoapods
                      #   end
                      #   desc "Update dependencies"
                      #   lane :update_dependencies do
                      #     ENV["IPHONEOS_DEPLOYMENT_TARGET"] = "13.0"
                      #     update_cocoapods
                      #     cocoapods(
                      #       clean_install: true
                      #     )
                      #   end
                      #   desc "Update Cocoapods"
                      #   lane :update_cocoapods do
                      #   cocoapods(
                      #     podfile: "./Podfile",
                      #     use_bundle_exec: true,
                      #     repo_update: true,
                      #     verbose: true,
                      #     try_repo_update_on_error: true,
                      #     clean_install: true
                      #   )
                      #   end
                      # end
                      # EOF
                      # cat fastlane/Fastfile
                      # cd fastlane
                      # bundle exec fastlane ios beta device:"iPhone 14"

                      bundle exec fastlane download_keys

                      bundle exec fastlane tf device:"iPhone 14"
                    privileged: true
                    envVariables:
                      FASTLANE_XCODEBUILD_SETTINGS_TIMEOUT: "30"
                      FASTLANE_XCODEBUILD_SETTINGS_RETRIES: "4"
                      APP_IDENTIFIER: <+secrets.getValue("IOS_DEMO_APP_IDENTIFIER")>
                      APPLE_ID: <+secrets.getValue("IOS_DEMO_APPLE_ID")>
                      FASTLANE_USER: <+secrets.getValue("IOS_DEMO_APPLE_ID")>
                      FASTLANE_PASSWORD: <+secrets.getValue("IOS_DEMO_FASTLANE_PASSWORD")>
                      FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: <+secrets.getValue("IOS_DEMO_FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD")>
                      ITC_TEAM_ID: <+secrets.getValue("IOS_DEMO_ITC_TEAM_ID")>
                      TEAM_ID: <+secrets.getValue("IOS_DEMO_TEAM_ID")>
                      WORKSPACE: HarnessMobile.xcworkspace
                      SCHEME: HarnessMobile
                      CONFIGURATION: "\"\""
                      MATCH_PASSWORD: <+secrets.getValue("IOS_DEMO_MATCH_PASSWORD")>
                      MATCH_KEYCHAIN_PASSWORD: <+secrets.getValue("IOS_DEMO_MATCH_PASSWORD")>
                      APP_STORE_CONNECT_APPLE_ID: <+secrets.getValue("IOS_DEMO_APP_STORE_CONNECT_APPLE_ID")>
                      LANG: en_US.UTF-8
                      LC_ALL: en_US.UTF-8
                      APP_STORE_CONNECT_API_KEY_ISSUER_ID: <+secrets.getValue("IOS_DEMO_ISSUER_ID")>
                      APP_STORE_CONNECT_API_KEY_KEY_ID: <+secrets.getValue("IOS_DEMO_API_KEY_ID")>
                      KEYCHAIN_PASSWORD: <+secrets.getValue("IOS_DEMO_KEYCHAIN_PASSWORD")>
                  when:
                    stageStatus: Success
                  failureStrategies:
                    - onFailure:
                        errors:
                          - AllErrors
                        action:
                          type: Ignore
              - step:
                  type: Run
                  name: Logs
                  identifier: Logs
                  spec:
                    shell: Sh
                    command: cat /Users/anka/Library/Logs/gym/HarnessMobile-HarnessMobile.log
                  when:
                    stageStatus: All
                  failureStrategies: []
          platform:
            os: MacOS
            arch: Arm64
          runtime:
            type: Cloud
            spec: {}
