pipeline:
  name: MOBILE - IOS DevOps Mobile
  identifier: IOS_DevOps_Mobile
  projectIdentifier: GIT_FLOW_DEMO
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: account.Diego_Git
        repoName: ios_devops_mobile
        build: <+input>
  stages:
    - stage:
        name: Build IOS
        identifier: Build_IOS
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          execution:
            steps:
              - parallel:
                  - step:
                      type: Run
                      name: Build
                      identifier: Build
                      spec:
                        shell: Sh
                        command: |
                          #sudo xcode-select -switch /Applications/Xcode_14.2.0.app

                          ls -ltra

                          ls -ltra /Applications

                          sudo gem install cocoapods

                          pod install

                          keyfile="/private/tmp/harness/AuthKey.p8"
                          certfile="/private/tmp/harness/certificate.pem"

                          pwd

                          echo "creating key file"

                          echo '<+secrets.getValue("apple_store_developer_apikey")>' > $keyfile

                          echo "created key file"

                          pwd

                          echo "creating cert file"

                          echo '<+secrets.getValue("diego_apple_cert")>' > $certfile

                          echo "created cert file"

                          ls -ltra

                          security list-keychains

                          security find-identity -v -p codesigning

                          security find-certificate -a -p /Library/Keychains/System.keychain

                          security find-certificate -a -p /Users/anka/Library/Keychains/login.keychain-db

                          # security import certificate.pem -k /Library/Keychains/System.keychain
                          security import certificate.pem -k /Users/anka/Library/Keychains/login.keychain-db

                          # echo "revoking existing development certificate"

                          # sudo xcode-select --reset
                          # sudo xcrun revokesimulator com.apple.CoreSimulator.SimRuntime.iOS-14-5
                          # sudo xcrun revokesimulator com.apple.CoreSimulator.SimRuntime.iOS-15-0

                          echo "building"

                          xcodebuild -workspace PlatformDevops.xcworkspace -scheme PlatformDevops -configuration Release -authenticationKeyPath $keyfile -authenticationKeyID <+secrets.getValue("apple_store_api_key")> -authenticationKeyIssuerID <+secrets.getValue("apple_store_issuer_id")> -allowProvisioningUpdates

                          echo "archiving"

                          xcodebuild archive -workspace PlatformDevops.xcworkspace -scheme PlatformDevops -configuration Release -archivePath ./Artifact/PlatformDevops.xcarchive

                          echo "publishing"

                          xcodebuild -exportArchive -archivePath ./Artifact/PlatformDevops.xcarchive -exportPath ./Artifact/PlatformDevops.ipa -exportOptionsPlist HarnessConfig.plist

                          ls -ltra ./Artifact


                          altool --upload-app -f ./Artifact/PlatformDevops.ipa -t ios -u diegopereiraeng@gmail.com

                          xcodebuild -exportArchive -archivePath ./Artifact -exportPath YourExportPath -exportOptionsPlist HarnessConfig.plist
                        privileged: true
                        envVariables:
                          IPHONEOS_DEPLOYMENT_TARGET: 16.0.99
                  - step:
                      type: Run
                      name: Build IOS
                      identifier: Build_IOS
                      spec:
                        shell: Sh
                        command: |+
                          sudo gem install fastlane

                          bundle exec fastlane install_plugins


                          cat <<EOF >>Fastfile
                          platform :ios do
                            desc "Build the app"
                            lane :build do
                              cocoapods(
                                clean: true,
                                repo_update: true
                              )
                              keyfile="/private/tmp/harness/AuthKey.p8"
                              sh "echo 'creating key file'"
                              sh "echo '<+secrets.getValue(\"apple_store_developer_apikey\")>' > #{keyfile}"
                              sh "echo 'created key file'"
                              sh "pwd"
                              sh "ls -ltra"
                              sh "echo 'building'"
                              gym(
                                workspace: "PlatformDevops.xcworkspace",
                                scheme: "PlatformDevops",
                                configuration: "Release",
                                export_options: {
                                  authenticationKeyPath: keyfile,
                                  authenticationKeyID: "<+secrets.getValue(\"apple_store_api_key\")>",
                                  authenticationKeyIssuerID: "<+secrets.getValue(\"apple_store_issuer_id\")>",
                                  allowProvisioningUpdates: true
                                }
                              )
                              sh "echo 'archiving'"
                              archive(
                                workspace: "PlatformDevops.xcworkspace",
                                scheme: "PlatformDevops",
                                configuration: "Release",
                                export_archive: true,
                                export_options: {
                                  exportPath: "./Artifact/PlatformDevops.ipa",
                                  exportOptionsPlist: "HarnessConfig.plist"
                                }
                              )
                              sh "echo 'publishing'"
                              upload_to_app_store(
                                ipa: "./Artifact/PlatformDevops.ipa"
                              )
                              sh "ls -ltra ./Artifact"
                            end
                          end

                          EOF

                      when:
                        stageStatus: Success
                        condition: "\"!\" == \"2\""
                      failureStrategies: []
          platform:
            os: MacOS
            arch: Arm64
          runtime:
            type: Cloud
            spec: {}
