pipeline:
  name: CI-CD - Windows Deployment - Copy Files
  identifier: CICD_Windows_Deployment_Copy_Files
  projectIdentifier: GIT_FLOW_DEMO
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: account.diegogithubapp
        repoName: python-utils
        build: <+input>
  stages:
    - stage:
        name: Build Windows
        identifier: Build_Windows
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - step:
                  type: Run
                  name: Build Windows
                  identifier: Build_Windows
                  spec:
                    connectorRef: account.DockerHubDiego
                    image: diegokoala/python-utils
                    shell: Sh
                    command: |-
                      # Zip the Dockerfile
                      zip Dockerfile.zip /harness/Dockerfile

                      # Convert the zip file to a base64 encoded file
                      base64 Dockerfile.zip > Dockerfile.zip.b64

                      wget https://archive.org/download/duke-nukem-3-d-dos-en/Duke_Nukem_3D_DOS_EN.zip

                      base64 Duke_Nukem_3D_DOS_EN.zip > Duke_Nukem_3D_DOS_EN.zip.b64

                      ls -ltra

                      du -h
              - step:
                  type: Run
                  name: Split Files
                  identifier: Split_Files
                  spec:
                    shell: Python
                    command: |


                      def split_file(file_path, part_size):
                          part_num = 1
                          with open(file_path, 'rb') as file:
                              while True:
                                  data = file.read(part_size)
                                  if not data:
                                      break
                                  part_file_name = f"{file_path}_part{part_num}"
                                  with open(part_file_name, 'wb') as part_file:
                                      part_file.write(data)
                                  part_num += 1

                      # Main
                      filePath = "/harness/Duke_Nukem_3D_DOS_EN.zip.b64"
                      split_file(filePath, 10*1024*1024)  # 10 MB por parte
              - parallel:
                  - step:
                      type: Background
                      name: Start Upload Server
                      identifier: Upload_Server
                      spec:
                        connectorRef: account.DockerHubDiego
                        image: diegokoala/python-utils
                        shell: Python
                        command: |-
                          import winrm

                          # Dados da conexão com a máquina remota
                          remote_host = "35.223.187.17"
                          username = "diego_pereira"
                          password = "<+secrets.getValue("windows_diego")>"

                          # Inicializa a sessão WinRM
                          session = winrm.Session(remote_host, auth=(username, password))

                          # Script PowerShell que será executado na máquina remota
                          ps_script = r"""
                           $address = 'http://localhost:8080/upload/'
                          $passwordEsperado = 'senhaSegura123'
                          $listener = New-Object System.Net.HttpListener
                          $listener.Prefixes.Add($address)
                          $listener.Start()
                          Write-Host "Listening on $address"
                          try {
                              $context = $listener.GetContext()
                              $request = $context.Request
                              if ($request.HttpMethod -eq 'POST') {
                                  $receivedPassword = $request.Headers["Password"]
                                  if ($receivedPassword -eq $passwordEsperado) {
                                      $filePath = "C:\Users\diego_pereira\Desktop\uploadedfile.zip"
                                      $fileStream = [System.IO.File]::OpenWrite($filePath)
                                      $request.InputStream.CopyTo($fileStream)
                                      $fileStream.Close()
                                      Write-Host "File uploaded to $filePath"
                                      $response = $context.Response
                                      $response.StatusCode = 200
                                      $response.Close()
                                  } else {
                                      $response = $context.Response
                                      $response.StatusCode = 403
                                      $response.Close()
                                      Write-Host "Senha incorreta fornecida, arquivo no aceito."
                                  }
                              }
                          } finally {
                              $listener.Stop()
                              Write-Host "Listener stopped"
                          } 
                          """

                          # Executar o script PowerShell em segundo plano na máquina remota
                          session.run_ps(ps_script)
                      when:
                        stageStatus: Success
                        condition: "false"
                  - step:
                      type: Run
                      name: Check Files
                      identifier: Check_Files
                      spec:
                        shell: Sh
                        command: |-
                          ls -ltra
                          du -h
              - parallel:
                  - step:
                      type: Run
                      name: Copy Files
                      identifier: Copy_Files
                      spec:
                        connectorRef: account.DockerHubDiego
                        image: diegokoala/python-utils
                        shell: Python
                        command: |
                          import winrm
                          import base64
                          import os

                          # Configurar a conexão
                          session = winrm.Session('http://35.223.187.17:5985/wsman', auth=('diego_pereira', '<+secrets.getValue("windows_diego")>'))

                          # Diretório e prefixo das partes do arquivo
                          dir_path = '/harness/'
                          file_prefix = 'Duke_Nukem_3D_DOS_EN.zip.b64_part'

                          # Encontrar todas as partes
                          part_files = [f for f in os.listdir(dir_path) if f.startswith(file_prefix)]

                          # Enviar cada parte
                          for part_file in part_files:
                              with open(os.path.join(dir_path, part_file), 'r') as file:
                                  encoded_string = file.read()

                              # Comando PowerShell para decodificar e salvar o arquivo
                              ps_script = """
                              $fileContent = '{}'
                              $decodedBytes = [System.Convert]::FromBase64String($fileContent)
                              [System.IO.File]::WriteAllBytes('C:\\Users\\diego_pereira\\Desktop\\{}', $decodedBytes)
                              """.format(encoded_string, part_file)

                              # Executar o comando
                              response = session.run_ps(ps_script)

                              if response.status_code == 0:
                                  print(f"{part_file} transferred successfully.")
                              else:
                                  print(f"Error in transferring {part_file}:", response.std_err)
                      when:
                        stageStatus: Success
                  - step:
                      type: Run
                      name: Send Files
                      identifier: SendFiles
                      spec:
                        connectorRef: account.DockerHubDiego
                        image: diegokoala/python-utils
                        shell: Python
                        command: |+
                          # import requests

                          # url = 'http://35.223.187.17:8080/upload'
                          # file_path = '/harness/Duke_Nukem_3D_DOS_EN.zip'
                          # password_header = {'Password': 'senhaSegura123'}

                          # with open(file_path, 'rb') as file:
                          #     response = requests.post(url, headers=password_header, data=file)

                          # if response.status_code == 200:
                          #     print("Arquivo enviado com sucesso.")
                          # else:
                          #     print("Falha ao enviar o arquivo:", response.status_code)

                          from winrmcp import Client

                          client = Client('35.223.187.17:5985', auth=('diego_pereira', '<+secrets.getValue("windows_diego")>'))

                          client.copy('/harness/Duke_Nukem_3D_DOS_EN.zip', 'C:\\Users\\diego_pereira\\Desktop\\DukeNuken.zip')

                      when:
                        stageStatus: Success
                        condition: "false"
