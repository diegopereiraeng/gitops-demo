pipeline:
  name: ECS Banking Demo
  identifier: ECS_Banking_Demo
  projectIdentifier: GIT_FLOW_DEMO
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: account.diegogithubapp
        repoName: gitflow-ff-demo
        build: <+input>
  stages:
    - stage:
        name: Build Test Push Dev
        identifier: Build_Container_and_Push
        type: CI
        spec:
          cloneCodebase: true
          serviceDependencies:
            - identifier: dind
              name: dind
              type: Service
              spec:
                connectorRef: account.DockerHubDiego
                image: docker:dind
                privileged: true
                entrypoint:
                  - dockerd-entrypoint.sh
          execution:
            steps:
              - step:
                  type: RestoreCacheGCS
                  name: Restore GCS
                  identifier: Restore_GCS
                  spec:
                    connectorRef: account.SalesGCP
                    bucket: latam-cie-cache
                    key: NodeSonar
                    archiveFormat: Tar
                  when:
                    stageStatus: Success
                  failureStrategies: []
              - parallel:
                  - step:
                      type: Security
                      name: Sonar Scan Vulnerabilities
                      identifier: Sonar_Scan_Vulnerabilities
                      spec:
                        privileged: true
                        settings:
                          policy_type: manualUpload
                          scan_type: repository
                          repository_branch: <+pipeline.variables.branch>
                          product_name: sonarqube
                          product_access_token: sqa_e8b9ccf4a21f914cc88a81ed3cf80b345ed9ff16
                          product_project_name: gitflow-demo
                          product_project_key: gitflow-demo
                          product_domain: http://sonar.harness-demo.site
                          product_config_name: sonarqube-agent
                          product_lookup_type: byKey
                          repository_project: gitflow-ff-demo
                          customer_artifacts_path: /harness/tests/scan_tools/sonarqube/test_data
                          manual_upload_filename: "001"
                        imagePullPolicy: Always
                      when:
                        stageStatus: Success
                      failureStrategies:
                        - onFailure:
                            errors:
                              - AllErrors
                            action:
                              type: Ignore
                  - step:
                      type: Security
                      name: Fortify
                      identifier: fortify
                      spec:
                        connectorRef: account.DockerHubDiego
                        privileged: true
                        settings:
                          product_name: fortify
                          product_config_name: fortify-default
                          policy_type: manualUpload
                          scan_type: repository
                          repository_project: gitflow-ff-demo
                          repository_branch: dev
                          customer_artifacts_path: /harness/tests/fortify
                          manual_upload_filename: "002"
                        imagePullPolicy: Always
                      failureStrategies:
                        - onFailure:
                            errors:
                              - AllErrors
                            action:
                              type: Ignore
                      when:
                        stageStatus: Success
                      timeout: 15m
                  - step:
                      type: Security
                      name: Brakeman Scan
                      identifier: Brakeman_Scan
                      spec:
                        connectorRef: account.DockerHubDiego
                        privileged: true
                        settings:
                          policy_type: manualUpload
                          scan_type: repository
                          repository_project: gitflow-ff-demo
                          repository_branch: <+codebase.branch>
                          product_name: brakeman
                          product_config_name: brakeman-default
                          fail_on_severity: HIGH
                          customer_artifacts_path: /harness/tests/scan_tools/brakeman/test_data
                          manual_upload_filename: "001"
                        imagePullPolicy: Always
                      when:
                        stageStatus: Success
                      failureStrategies:
                        - onFailure:
                            errors:
                              - AllErrors
                            action:
                              type: Ignore
                      timeout: 6m
                  - step:
                      type: Security
                      name: OWASP
                      identifier: OWASP
                      spec:
                        connectorRef: account.DockerHubDiego
                        privileged: true
                        settings:
                          policy_type: manualUpload
                          scan_type: repository
                          repository_project: gitflow-ff-demo
                          repository_branch: <+codebase.branch>
                          product_name: owasp
                          product_config_name: owasp 5.x
                          fail_on_severity: HIGH
                          customer_artifacts_path: /harness/tests/scan_tools/owasp/test_data
                          manual_upload_filename: "001"
                        imagePullPolicy: Always
                      failureStrategies:
                        - onFailure:
                            errors:
                              - AllErrors
                            action:
                              type: Ignore
                      when:
                        stageStatus: Success
                  - step:
                      type: Run
                      name: Lint Check
                      identifier: Lint_Check
                      spec:
                        connectorRef: account.DockerHubDiego
                        image: node:alpine
                        shell: Sh
                        command: |-
                          export NODE_OPTIONS="--max-old-space-size=2048"

                          mkdir -p html/reports/eslint
                          npm install

                          #ls -ltra node_modules/


                          ls html

                          ls html/reports/eslint/

                          npm run lint

                          ls html/reports/eslint/
                        privileged: false
                        reports:
                          type: JUnit
                          spec:
                            paths:
                              - "**/eslint.xml"
                        imagePullPolicy: IfNotPresent
                        resources:
                          limits:
                            memory: 2Gi
                      failureStrategies: []
                  - step:
                      type: Plugin
                      name: SonarQube Quality Gateway Check
                      identifier: SonarQube_Quality_Gateway_Check
                      spec:
                        connectorRef: account.DockerHubDiego
                        image: plugins/sonarqube-scanner:linux-amd64
                        privileged: false
                        reports:
                          type: JUnit
                          spec:
                            paths:
                              - sonarResults.xml
                        settings:
                          sonar_host: http://sonar.harness-demo.site
                          sonar_token: squ_85fe22cb008dc9b5f02104541952792fdf8596d8
                          sources: html
                          binaries: html
                          level: DEBUG
                          sonar_name: gitflow-demo
                          sonar_key: gitflow-demo
                          branch: <+pipeline.variables.branch>
                        imagePullPolicy: Always
                        resources:
                          limits:
                            memory: 2Gi
                      failureStrategies:
                        - onFailure:
                            errors:
                              - AllErrors
                            action:
                              type: Ignore
                      when:
                        stageStatus: Success
              - step:
                  type: Run
                  name: Build Image
                  identifier: Build_Image
                  spec:
                    connectorRef: account.DockerHubDiego
                    image: docker:latest
                    shell: Sh
                    command: docker build . -t nodegoat:local --build-arg FFKEY=<+pipeline.variables.ffkey>
              - step:
                  type: Security
                  name: Aqua
                  identifier: Aqua
                  spec:
                    connectorRef: account.DockerHubDiego
                    privileged: true
                    settings:
                      product_name: aqua-trivy
                      product_config_name: aqua-trivy
                      policy_type: manualUpload
                      scan_type: container
                      container_type: local_image
                      container_domain: docker.io
                      container_project: nodegoat
                      container_tag: local
                      fail_on_severity: HIGH
                      customer_artifacts_path: /harness/tests/scan_tools/aqua_trivy/test_data
                      manual_upload_filename: "005"
                    imagePullPolicy: Always
                  failureStrategies:
                    - onFailure:
                        errors:
                          - AllErrors
                        action:
                          type: Ignore
                  when:
                    stageStatus: Success
              - parallel:
                  - step:
                      type: BuildAndPushDockerRegistry
                      name: Build Container and Push to Docker Hub
                      identifier: Build_Container_and_Push_to_Docker_Hub
                      spec:
                        connectorRef: account.DockerHubDiego
                        repo: diegokoala/harness-ff-bankingapp-ecs
                        tags:
                          - <+pipeline.variables.tag>-<+pipeline.sequenceId>
                          - ecs
                        dockerfile: Dockerfile
                        buildArgs:
                          FFKEY: <+pipeline.variables.ffkey>
                        optimize: true
                  - step:
                      type: SaveCacheGCS
                      name: Save GCS
                      identifier: Save_GCS
                      spec:
                        connectorRef: account.SalesGCP
                        bucket: latam-cie-cache
                        key: NodeSonar
                        sourcePaths:
                          - node_modules
                          - .sonar
                        archiveFormat: Tar
                      when:
                        stageStatus: Success
                      failureStrategies: []
          serviceConfig:
            serviceRef: ""
            serviceDefinition:
              type: Kubernetes
              spec:
                variables: []
          sharedPaths:
            - /var/run
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
        when:
          pipelineStatus: Success
        variables:
          - name: sto_api_key
            type: String
            value: <+secrets.getValue("account.sto_api_key")>
    - stage:
        name: Deploy
        identifier: Deploy
        description: ""
        type: Deployment
        spec:
          deploymentType: ECS
          service:
            serviceRef: BankingAppECS
          environment:
            environmentRef: prod
            deployToAll: false
            infrastructureDefinitions:
              - identifier: ECS_SE_Cluster_Prod
          execution:
            steps:
              - stepGroup:
                  name: Blue Green Deployment
                  identifier: blueGreenDepoyment
                  steps:
                    - step:
                        name: ECS Blue Green Create Service
                        identifier: EcsBlueGreenCreateService
                        type: EcsBlueGreenCreateService
                        timeout: 10m
                        spec:
                          loadBalancer: banking-app
                          prodListener: arn:aws:elasticloadbalancing:us-east-2:759984737373:listener/app/banking-app/5edaf0c61d884730/0f442a587ea54924
                          prodListenerRuleArn: arn:aws:elasticloadbalancing:us-east-2:759984737373:listener-rule/app/banking-app/5edaf0c61d884730/0f442a587ea54924/537790f89c8db869
                          stageListener: arn:aws:elasticloadbalancing:us-east-2:759984737373:listener/app/banking-app/5edaf0c61d884730/0f442a587ea54924
                          stageListenerRuleArn: arn:aws:elasticloadbalancing:us-east-2:759984737373:listener-rule/app/banking-app/5edaf0c61d884730/0f442a587ea54924/537790f89c8db869
                    - step:
                        name: ECS Blue Green Swap Target Groups
                        identifier: EcsBlueGreenSwapTargetGroups
                        type: EcsBlueGreenSwapTargetGroups
                        timeout: 10m
                        spec: {}
            rollbackSteps:
              - step:
                  name: ECS Blue Green Rollback
                  identifier: EcsBlueGreenRollback
                  type: EcsBlueGreenRollback
                  timeout: 10m
                  spec: {}
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
