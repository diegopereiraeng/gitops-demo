pipeline:
  name: BACKSTAGE Build
  identifier: Backstage_Build
  projectIdentifier: GIT_FLOW_DEMO
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: account.diegogithubapp
        repoName: harness-backstage
        build: <+input>
  stages:
    - stage:
        name: Build Backstage
        identifier: Build_Backstage
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - step:
                  type: Run
                  name: Build Binaries
                  identifier: Build_Binaries
                  spec:
                    connectorRef: account.DockerHubDiego
                    image: node:16.19.0-bullseye
                    shell: Sh
                    command: |-
                      yarn install --frozen-lockfile

                      # tsc outputs type definitions to dist-types/ in the repo root, which are then consumed by the build
                      yarn tsc

                      # Build the backend, which bundles it all up into the packages/backend/dist folder.
                      yarn build:backend
              - step:
                  type: BuildAndPushDockerRegistry
                  name: Build and Push an image to Docker Registry_1
                  identifier: BuildandPushanimagetoDockerRegistry_1
                  spec:
                    connectorRef: account.DockerHubDiego
                    repo: diegokoala/harness-backstage
                    tags:
                      - 0.0.4
                    dockerfile: packages/backend/Dockerfile
    - stage:
        name: Create Infra
        identifier: Create_Infra
        description: ""
        type: Custom
        spec:
          execution:
            steps:
              - step:
                  name: Create DNS
                  identifier: Create_DNS
                  template:
                    templateRef: Create_DNS_in_HarnessDemo_Site
                    versionLabel: 1.0.0
                    templateInputs:
                      type: TerraformApply
                      spec:
                        configuration:
                          type: Inline
                          spec:
                            varFiles:
                              - varFile:
                                  identifier: subdomain
                                  type: Inline
                                  spec:
                                    content: subdomain="backstage"
                        provisionerIdentifier: backstage
        tags: {}
