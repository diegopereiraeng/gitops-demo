pipeline:
  name: PLATFORM FAST - Banking FrontEnd Pipeline
  identifier: Production_Git_Flow
  allowStageExecutions: true
  projectIdentifier: GIT_FLOW_DEMO
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: account.diegogithubapp
        repoName: gitflow-ff-demo
        build: <+input>
  stages:
    - stage:
        name: Build Test Push Dev
        identifier: Build_Container_and_Push
        type: CI
        spec:
          cloneCodebase: true
          serviceDependencies:
            - identifier: dind
              name: dind
              type: Service
              spec:
                connectorRef: account.DockerHubDiego
                image: docker:dind
                privileged: true
                entrypoint:
                  - dockerd-entrypoint.sh
          execution:
            steps:
              - parallel:
                  - step:
                      type: RestoreCacheGCS
                      name: Restore GCS
                      identifier: Restore_GCS
                      spec:
                        connectorRef: account.SalesGCP
                        bucket: latam-cie-cache
                        key: NodeSonar
                        archiveFormat: Tar
                      when:
                        stageStatus: Success
                      failureStrategies: []
                  - step:
                      type: Run
                      name: Lint Check
                      identifier: Lint_Check
                      spec:
                        connectorRef: account.DockerHubDiego
                        image: node:alpine
                        shell: Sh
                        command: |-
                          export NODE_OPTIONS="--max-old-space-size=2048"

                          mkdir -p html/reports/eslint
                          npm install

                          #ls -ltra node_modules/


                          ls html

                          ls html/reports/eslint/

                          npm run lint

                          ls html/reports/eslint/
                        privileged: false
                        reports:
                          type: JUnit
                          spec:
                            paths:
                              - "**/eslint.xml"
                        imagePullPolicy: IfNotPresent
                        resources:
                          limits:
                            memory: 2Gi
                      failureStrategies: []
              - parallel:
                  - step:
                      type: Security
                      name: Fortify
                      identifier: fortify
                      spec:
                        connectorRef: account.DockerHubDiego
                        privileged: true
                        settings:
                          product_name: fortify
                          product_config_name: fortify-default
                          policy_type: manualUpload
                          scan_type: repository
                          repository_project: gitflow-ff-demo
                          repository_branch: dev
                          customer_artifacts_path: /harness/tests/fortify
                          manual_upload_filename: "002"
                        imagePullPolicy: Always
                      failureStrategies:
                        - onFailure:
                            errors:
                              - AllErrors
                            action:
                              type: Ignore
                      when:
                        stageStatus: Success
                      timeout: 15m
                  - step:
                      type: Plugin
                      name: SonarQube Quality Gate Check
                      identifier: SonarQube_Quality_Gateway_Check
                      spec:
                        connectorRef: account.DockerHubDiego
                        image: plugins/sonarqube-scanner:v2.2.1
                        privileged: false
                        reports:
                          type: JUnit
                          spec:
                            paths:
                              - sonarResults.xml
                        settings:
                          sonar_host: http://sonar.harness-demo.site
                          sonar_token: squ_85fe22cb008dc9b5f02104541952792fdf8596d8
                          sources: html
                          binaries: html
                          level: DEBUG
                          sonar_name: gitflow-demo
                          sonar_key: gitflow-demo
                          branch: <+pipeline.variables.branch>
                        imagePullPolicy: Always
                        resources:
                          limits:
                            memory: 2Gi
                      failureStrategies:
                        - onFailure:
                            errors:
                              - AllErrors
                            action:
                              type: Ignore
                      when:
                        stageStatus: Success
                  - step:
                      type: Sonarqube
                      name: Sonarqube Vulnerability
                      identifier: Sonarqube_Vulnerability
                      spec:
                        mode: ingestion
                        config: default
                        target:
                          name: <+pipeline.properties.ci.codebase.repoName>
                          type: repository
                          variant: "<+codebase.branch> "
                        advanced:
                          log:
                            level: info
                        ingestion:
                          file: /harness/tests/scan_tools/sonarqube/test_data/001
                  - step:
                      type: Owasp
                      name: Owasp
                      identifier: Owasp
                      spec:
                        mode: ingestion
                        config: default
                        target:
                          name: <+pipeline.properties.ci.codebase.repoName>
                          type: repository
                          variant: <+codebase.branch>
                        advanced:
                          log:
                            level: info
                        ingestion:
                          file: /harness/tests/scan_tools/owasp/test_data/001
                  - step:
                      type: Brakeman
                      name: Brakeman
                      identifier: Brakeman
                      spec:
                        mode: ingestion
                        config: default
                        target:
                          name: <+pipeline.properties.ci.codebase.repoName>
                          type: repository
                          variant: <+codebase.branch>
                        advanced:
                          log:
                            level: info
                        ingestion:
                          file: /harness/tests/scan_tools/brakeman/test_data/001
              - step:
                  type: Run
                  name: Build Image
                  identifier: Build_Image
                  spec:
                    connectorRef: account.DockerHubDiego
                    image: docker:latest
                    shell: Sh
                    command: |-
                      docker build . -t nodegoat:local --build-arg FFKEY=<+pipeline.variables.ffkey>

                      env | grep HARNESS
              - parallel:
                  - step:
                      type: Security
                      name: Aqua
                      identifier: Aqua
                      spec:
                        privileged: true
                        settings:
                          product_name: aqua-trivy
                          product_config_name: aqua-trivy
                          policy_type: manualUpload
                          scan_type: container
                          container_type: local_image
                          container_domain: docker.io
                          container_project: nodegoat
                          container_tag: local
                          fail_on_severity: HIGH
                          customer_artifacts_path: /harness/tests/scan_tools/aqua_trivy/test_data
                          manual_upload_filename: "005"
                        imagePullPolicy: Always
                      failureStrategies:
                        - onFailure:
                            errors:
                              - AllErrors
                            action:
                              type: Ignore
                      when:
                        stageStatus: Success
                        condition: "false"
                  - step:
                      type: AquaTrivy
                      name: AquaTrivy
                      identifier: AquaTrivy
                      spec:
                        mode: ingestion
                        config: default
                        target:
                          name: <+pipeline.properties.ci.codebase.repoName>
                          type: container
                          variant: <+codebase.branch>
                        advanced:
                          log:
                            level: info
                        privileged: false
                        ingestion:
                          file: /harness/tests/scan_tools/aqua_trivy/test_data/005
              - parallel:
                  - step:
                      type: BuildAndPushDockerRegistry
                      name: Build Container and Push to Docker Hub
                      identifier: Build_Container_and_Push_to_Docker_Hub
                      spec:
                        connectorRef: account.DockerHubDiego
                        repo: diegokoala/harness-ff-bankingapp
                        tags:
                          - <+pipeline.variables.tag>-<+codebase.shortCommitSha>
                          - dev
                        buildArgs:
                          FFKEY: <+pipeline.variables.ffkey>
                        optimize: true
                  - step:
                      type: SaveCacheGCS
                      name: Save GCS
                      identifier: Save_GCS
                      spec:
                        connectorRef: account.SalesGCP
                        bucket: latam-cie-cache
                        key: NodeSonar
                        sourcePaths:
                          - node_modules
                          - .sonar
                        archiveFormat: Tar
                      when:
                        stageStatus: Success
                      failureStrategies: []
              - stepGroup:
                  name: Kube Score Dev
                  identifier: kube_score
                  steps:
                    - parallel:
                        - step:
                            type: GitClone
                            name: GitClone Manifests
                            identifier: GitClone_Manifests
                            spec:
                              connectorRef: account.diegogithubapp
                              repoName: k8s-manifests-templates
                              build:
                                type: branch
                                spec:
                                  branch: main
                        - step:
                            type: GitClone
                            name: GitClone Values
                            identifier: GitClone_Values
                            spec:
                              connectorRef: account.diegogithubapp
                              repoName: values-k8s
                              build:
                                type: branch
                                spec:
                                  branch: main
                    - step:
                        type: Plugin
                        name: Template Render
                        identifier: Template_Render
                        spec:
                          connectorRef: account.DockerHubDiego
                          image: diegokoala/go-template-plugin:latest
                          settings:
                            template: /harness/k8s-manifests-templates/templates/envs/dev/
                            values: /harness/values-k8s/envs/dev/services/gitflow-app-ff/values.yaml
                            output: /harness/template-results/
                          imagePullPolicy: Always
                    - step:
                        type: Run
                        name: Kube Score
                        identifier: Kube_Score
                        spec:
                          connectorRef: account.DockerHubDiego
                          image: zegl/kube-score:latest
                          shell: Sh
                          command: |-
                            # ls -ltra

                            # kube-score score /harness/template-results/*.yaml -o sarif > ./kubescore.sarif | true
                            kube-score score /harness/template-results/*.yaml -o json > kubescore.json | true
                            kube-score score /harness/template-results/*.yaml > human.log | true

                            # cat human.log
                            cat kubescore.json
                          imagePullPolicy: IfNotPresent
                    - parallel:
                        - step:
                            type: CustomIngest
                            name: Kube Score Ingestion
                            identifier: Kube_Score_Ingestion
                            spec:
                              mode: ingestion
                              config: default
                              target:
                                name: k8s-manifests-templates
                                type: repository
                                variant: dev
                              advanced:
                                log:
                                  level: debug
                              imagePullPolicy: IfNotPresent
                              ingestion:
                                file: /harness/kubescore.sarif
                            when:
                              stageStatus: Success
                              condition: "false"
                        - step:
                            name: Kube Score Ingestion
                            identifier: kube_score
                            type: Plugin
                            spec:
                              connectorRef: account.DockerHubDiego
                              image: diegokoala/harness-junit-converter:latest
                              reports:
                                type: JUnit
                                spec:
                                  paths:
                                    - "**/*.xml"
                              settings:
                                json_file_name: kubescore.json
                                test_name: object_name
                                test_description: file_name
                                test_junit_time: file_row
                                test_junit_package: file_name
                                test_junit_name: object_name
                                test_junit_list: checks
                                test_junit_list_name: name
                                test_junit_list_class_name: comment
                                test_junit_list_failure: comments[].summary
                                test_junit_list_time: grade
                                nested_json_list: true
                                test_junit_skip_field: skipped
          serviceConfig:
            serviceRef: ""
            serviceDefinition:
              type: Kubernetes
              spec:
                variables: []
          sharedPaths:
            - /var/run
            - /cache
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          caching:
            enabled: false
            paths: []
          slsa_provenance:
            enabled: false
        when:
          pipelineStatus: Success
          condition: <+pipeline.variables.target> == "dev" && <+pipeline.variables.gitEvent> == "PR"
        variables:
          - name: sto_api_key
            type: String
            value: <+secrets.getValue("account.sto_api_key")>
        description: ""
    - stage:
        name: Deploy Banking App Dev
        identifier: Deploy_Banking_App_Dev
        description: ""
        type: Deployment
        spec:
          serviceConfig:
            serviceDefinition:
              type: Kubernetes
              spec:
                artifacts:
                  sidecars: []
                  primary:
                    spec:
                      connectorRef: account.DockerHubDiego
                      imagePath: diegokoala/harness-ff-bankingapp
                      tag: <+pipeline.variables.tag>-<+codebase.shortCommitSha>
                    type: DockerRegistry
                manifestOverrideSets: []
                manifests:
                  - manifest:
                      identifier: K8sBankingApp
                      type: K8sManifest
                      spec:
                        store:
                          type: Github
                          spec:
                            connectorRef: account.Diego_Git
                            gitFetchType: Branch
                            paths:
                              - templates/envs/dev/deployment.yaml
                              - templates/envs/dev/namespace.yaml
                              - templates/envs/dev/service.yaml
                              - templates/envs/dev/autostopping.yaml
                            repoName: k8s-manifests-templates
                            branch: main
                        skipResourceVersioning: false
                  - manifest:
                      identifier: Values
                      type: Values
                      spec:
                        store:
                          type: Github
                          spec:
                            connectorRef: account.Diego_Git
                            gitFetchType: Branch
                            paths:
                              - envs/dev/services/gitflow-app-ff/values.yaml
                            repoName: values-k8s
                            branch: main
            serviceRef: BankingAppUI
          infrastructure:
            environmentRef: dev
            infrastructureDefinition:
              type: KubernetesDirect
              spec:
                connectorRef: account.cddemose
                namespace: harness-cd-ff-demo
                releaseName: banking-app-release-prod
            allowSimultaneousDeployments: true
            infrastructureKey: banking-app-k8s
          execution:
            steps:
              - parallel:
                  - step:
                      type: JiraCreate
                      name: "Open Jira ticket "
                      identifier: Create_JIRA_to_track_deployment
                      spec:
                        connectorRef: BankingJira
                        projectKey: HD
                        issueType: Story
                        fields:
                          - name: Summary
                            value: Deployment of <+service.name> in <+env.name> - <+pipeline.variables.virtualPath>
                      timeout: 1d
                      failureStrategies: []
                      when:
                        stageStatus: Success
                  - step:
                      type: ShellScript
                      name: Retrieve Dynamic Secrets
                      identifier: Retrieve_Secrets
                      spec:
                        shell: Bash
                        onDelegate: true
                        source:
                          type: Inline
                          spec:
                            script: |-

                              var1='<'
                              var2='+'
                              var3='>'
                              var4='secrets.getValue("account.diegogitapppem")'
                              var5='secrets.getValue("account.diegogitapppem")'
                              finalVar="$var1$var2 \"ABC:\" + $var4 $var3"
                              export finalVar

                              finalVar2="$var1$var2 \"ABC:\" + $var4 \
                              \"DEF:\" + $var5 $var3"

                              finalVar2="$var1$var2 \"ABC: \" + $var4 \
                              +  \"\\nDEF: \" + $var5 $var3"
                              export finalVar2

                              meio='"OUTRO_SECRET:" + secrets.getValue("account.diegogitapppem") + "DATABASE_URL:" +  secrets.getValue("account.diegogitapppem")'
                              fim=">"
                              SECRETS_YAML2="TESTE"
                              export SECRETS_YAML2
                        environmentVariables:
                          - name: HARNESS_ACCOUNT_ID
                            type: String
                            value: oEWs6wr7QvOW8d0ISfhttQ
                          - name: HARNESS_API_KEY
                            type: String
                            value: sat.623a2cd5cf67162d22b9cdbe.OIY82qrwRzgkELLa6PZu
                        outputVariables:
                          - name: SECRETS_YAML
                            type: String
                            value: finalVar
                          - name: SECRETS_YAML2
                            type: String
                            value: SECRETS_YAML2
                          - name: finalVar
                            type: String
                            value: finalVar
                          - name: finalVar2
                            type: String
                            value: finalVar2
                        executionTarget: {}
                      timeout: 10m
                      failureStrategies: []
              - parallel:
                  - stepGroup:
                      name: Canary Deployment
                      identifier: canaryDepoyment
                      steps:
                        - step:
                            type: JiraUpdate
                            name: "Update JIRA "
                            identifier: Update_JIRA_Start
                            spec:
                              connectorRef: BankingJira
                              issueKey: <+pipeline.stages.Deploy_Banking_App_Dev.spec.execution.steps.Create_JIRA_to_track_deployment.issue.key>
                              transitionTo:
                                transitionName: ""
                                status: In Progress
                              fields:
                                - name: Comment
                                  value: Dev Canary started
                            timeout: 1d
                            failureStrategies: []
                        - step:
                            name: Canary Deployment
                            identifier: canaryDeployment
                            type: K8sCanaryDeploy
                            timeout: 10m
                            spec:
                              instanceSelection:
                                type: Count
                                spec:
                                  count: 1
                              skipDryRun: true
                        - step:
                            type: JiraUpdate
                            name: Update JIRA Ready for Testing
                            identifier: Update_JIRA_Ready_for_Testing
                            spec:
                              connectorRef: BankingJira
                              issueKey: <+pipeline.stages.Deploy_Banking_App_Dev.spec.execution.steps.Create_JIRA_to_track_deployment.issue.key>
                              transitionTo:
                                transitionName: ""
                                status: QA Test
                              fields:
                                - name: Comment
                                  value: Ready for testing. Successfully passed sonarcube artifact scan.
                            timeout: 1d
                            failureStrategies: []
                        - step:
                            type: Verify
                            name: Deployment Verification
                            identifier: verify_prod
                            spec:
                              type: Rolling
                              spec:
                                sensitivity: MEDIUM
                                duration: 5m
                                deploymentTag: <+serviceConfig.artifacts.primary.tag>
                            timeout: 2h
                            failureStrategies:
                              - onFailure:
                                  errors:
                                    - Verification
                                  action:
                                    type: ManualIntervention
                                    spec:
                                      timeout: 2h
                                      onTimeout:
                                        action:
                                          type: StageRollback
                              - onFailure:
                                  errors:
                                    - Unknown
                                  action:
                                    type: ManualIntervention
                                    spec:
                                      timeout: 2h
                                      onTimeout:
                                        action:
                                          type: Ignore
                        - step:
                            name: Canary Delete
                            identifier: canaryDelete
                            type: K8sCanaryDelete
                            timeout: 10m
                            spec: {}
                      rollbackSteps:
                        - step:
                            name: Canary Delete
                            identifier: canaryDelete
                            type: K8sCanaryDelete
                            timeout: 10m
                            spec: {}
                  - stepGroup:
                      name: Kube Score
                      identifier: kube_score
                      steps:
                        - step:
                            type: GitClone
                            name: GitClone Manifests
                            identifier: GitClone_Manifests
                            spec:
                              connectorRef: account.diegogithubapp
                              repoName: k8s-manifests-templates
                              build:
                                type: branch
                                spec:
                                  branch: main
                        - step:
                            type: Plugin
                            name: Template Render
                            identifier: Template_Render
                            spec:
                              connectorRef: account.DockerHubDiego
                              image: diegokoala/go-template-plugin:latest
                              settings:
                                template: /harness/k8s-manifests-templates/templates/envs/dev/
                                values: /harness/values-k8s/envs/dev/services/gitflow-app-ff/values.yaml
                                output: /harness/template-results/
                              imagePullPolicy: IfNotPresent
                        - step:
                            type: Run
                            name: Kube Score
                            identifier: Kube_Score
                            spec:
                              connectorRef: account.DockerHubDiego
                              image: zegl/kube-score:latest
                              shell: Sh
                              command: |-
                                ls -ltra

                                kube-score score /harness/template-results/*.yaml
                              imagePullPolicy: IfNotPresent
                      stepGroupInfra:
                        type: KubernetesDirect
                        spec:
                          connectorRef: account.harness_demo
                          namespace: harness-delegate-ng
                          containerSecurityContext:
                            privileged: true
                      when:
                        stageStatus: Success
                        condition: "false"
              - stepGroup:
                  name: Primary Deployment
                  identifier: primaryDepoyment
                  steps:
                    - step:
                        name: Rolling Deployment
                        identifier: rollingDeployment
                        type: K8sRollingDeploy
                        timeout: 10m
                        spec:
                          skipDryRun: false
                    - step:
                        type: Http
                        name: Health Check
                        identifier: Check_Health
                        spec:
                          method: GET
                          headers: []
                          outputVariables: []
                          assertion: <+httpResponseCode> == 200
                          url: http://ff.harness-demo.site/<+pipeline.variables.virtualPath>/index.html
                        timeout: 1m
                        failureStrategies:
                          - onFailure:
                              errors:
                                - AllErrors
                              action:
                                type: MarkAsSuccess
                    - step:
                        type: K8sApply
                        name: Create AutoStopping Rule
                        identifier: Create_AutoStopping_Rule
                        spec:
                          filePaths:
                            - templates/envs/dev/autostopping.yaml
                          skipDryRun: false
                          skipSteadyStateCheck: false
                        timeout: 10m
                  rollbackSteps:
                    - step:
                        name: Rolling Rollback
                        identifier: rollingRollback
                        type: K8sRollingRollback
                        timeout: 10m
                        spec: {}
              - step:
                  type: JiraUpdate
                  name: Close Jira Ticket
                  identifier: Close_Jira_Ticket
                  spec:
                    connectorRef: BankingJira
                    issueKey: <+pipeline.stages.Deploy_Banking_App_Dev.spec.execution.steps.Create_JIRA_to_track_deployment.issue.key>
                    transitionTo:
                      transitionName: ""
                      status: Done
                    fields: []
                  timeout: 10m
            rollbackSteps:
              - step:
                  type: JiraUpdate
                  name: Jira Failed
                  identifier: Jira_Failed
                  spec:
                    connectorRef: BankingJira
                    issueKey: <+pipeline.stages.Deploy_Banking_App_Dev.spec.execution.steps.Create_JIRA_to_track_deployment.issue.key>
                    transitionTo:
                      transitionName: ""
                      status: Rejected
                    fields: []
                  timeout: 10m
              - step:
                  type: K8sCanaryDelete
                  name: Canary Delete
                  identifier: Canary_Delete
                  spec:
                    skipDryRun: false
                  timeout: 10m
              - step:
                  type: K8sRollingRollback
                  name: Rollback
                  identifier: Rollback
                  spec:
                    skipDryRun: false
                    pruningEnabled: false
                  timeout: 10m
          serviceDependencies: []
        when:
          pipelineStatus: Success
          condition: <+pipeline.variables.target> == "dev" && <+pipeline.variables.gitEvent> == "PR"
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
        tags: {}
    - stage:
        name: Lighthouse and Functional Test in Dev
        identifier: Functional_Test_Dev
        type: CI
        spec:
          cloneCodebase: true
          execution:
            steps:
              - parallel:
                  - step:
                      type: Run
                      name: Function BankingApp Test
                      identifier: Function_BankingApp_Test
                      spec:
                        connectorRef: account.DockerHubDiego
                        image: maven:alpine
                        shell: Sh
                        command: |-
                          apk add git

                          git clone https://github.com/diegopereiraeng/selenium-tests-ci.git

                          cd selenium-tests-ci

                          mvn test -Dtest=io.harness.sel.test.BankingAppTest
                        privileged: true
                        reports:
                          type: JUnit
                          spec:
                            paths:
                              - "**/*.xml"
                      when:
                        stageStatus: Success
                        condition: "false"
                  - step:
                      type: Run
                      name: LightHouse
                      identifier: LightHouse
                      spec:
                        connectorRef: account.DockerHubDiego
                        image: node:18.16
                        shell: Sh
                        command: |-
                          set -e
                          echo "Starting NPM installation"
                          npm init -y

                          echo "Starting dependency installation"
                          npm install -g puppeteer
                          npm install -g lighthouse

                          echo "Starting LightHouse"

                          node ./scripts/lighthouse/lighthouse.js Dev
                        outputVariables:
                          - name: CATEGORIES_LOGIN
                          - name: CATEGORIES_HOME
                      when:
                        stageStatus: Success
                        condition: "false"
                  - step:
                      type: Run
                      name: LightHouse2
                      identifier: LightHouse2
                      spec:
                        connectorRef: account.DockerHubDiego
                        image: node:18.16
                        shell: Sh
                        command: |-
                          set -e
                          export PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
                          apt-get update && apt-get install -y \
                            apt-transport-https \
                            ca-certificates \
                            gnupg \
                            --no-install-recommends \
                            && curl -sSL https://dl.google.com/linux/linux_signing_key.pub | apt-key add - \
                            && wget --no-verbose -O /tmp/chrome.deb https://dl.google.com/linux/chrome/deb/pool/main/g/google-chrome-stable/google-chrome-stable_105.0.5195.52-1_amd64.deb \
                            && apt install -y /tmp/chrome.deb \
                            && rm /tmp/chrome.deb \
                            && apt-get update && apt-get install -y fontconfig --no-install-recommends \
                            && apt-get purge --auto-remove -y gnupg \
                            && rm -rf /var/lib/apt/lists/*
                          # Set up Github Package Registry token
                          echo @harness:registry=https://npm.pkg.github.com > .npmrc
                          echo "//npm.pkg.github.com/:_authToken="$GITHUB_HARNESS_BOT_TOKEN >> .npmrc
                          echo always-auth=true >> .npmrc
                          echo "installing lighthouse"
                          # yarn add lighthouse@^10.3.0
                          # yarn add puppeteer@^5.5.0
                          # yarn add mysql@^2.18.1
                          echo "Starting NPM installation"
                          npm init -y

                          echo "Starting dependency installation"
                          npm install -g puppeteer -y
                          npm install -g lighthouse -y
                          echo "running lighthouse"
                          node ./scripts/lighthouse/lighthouse.js Dev
                      when:
                        stageStatus: Success
                        condition: "false"
            rollbackSteps: []
          serviceConfig:
            serviceRef: ""
            serviceDefinition:
              type: Kubernetes
              spec:
                variables: []
          caching:
            enabled: false
            paths: []
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
        when:
          pipelineStatus: Success
          condition: <+pipeline.variables.target> == "dev" && <+pipeline.variables.gitEvent> == "PR"
    - stage:
        name: Build QA
        identifier: Functional_Test
        type: CI
        spec:
          cloneCodebase: true
          infrastructure:
            useFromStage: Build_Container_and_Push
          execution:
            steps:
              - step:
                  type: BuildAndPushDockerRegistry
                  name: Build and Push QA
                  identifier: Build_and_Push_QA
                  spec:
                    connectorRef: account.DockerHubDiego
                    repo: diegokoala/harness-ff-bankingapp
                    tags:
                      - qa
                    buildArgs:
                      FFKEY: 5d86df08-b899-4b83-90a5-7f9a5845cc6f
                    optimize: true
                  when:
                    stageStatus: Success
                    condition: <+pipeline.variables.gitEvent> == "PUSH"
                  failureStrategies: []
            rollbackSteps: []
          serviceConfig:
            serviceRef: ""
            serviceDefinition:
              type: Kubernetes
              spec:
                variables: []
        when:
          pipelineStatus: Success
          condition: <+pipeline.variables.tag> == "qa"
    - stage:
        name: Deploy Banking App QA
        identifier: Deploy_Banking_App_QA
        description: ""
        type: Deployment
        spec:
          serviceConfig:
            serviceDefinition:
              type: Kubernetes
              spec:
                artifacts:
                  sidecars: []
                  primary:
                    type: DockerRegistry
                    spec:
                      connectorRef: account.DockerHubDiego
                      imagePath: diegokoala/harness-ff-bankingapp
                      tag: qa
                manifestOverrideSets: []
                manifests:
                  - manifest:
                      identifier: K8sBankingApp
                      type: K8sManifest
                      spec:
                        store:
                          type: Github
                          spec:
                            connectorRef: account.Diego_Git
                            gitFetchType: Branch
                            paths:
                              - templates/deployment.yaml
                              - templates/namespace.yaml
                              - templates/service.yaml
                            repoName: k8s-manifests-templates
                            branch: main
                        skipResourceVersioning: false
                  - manifest:
                      identifier: Values
                      type: Values
                      spec:
                        store:
                          type: Github
                          spec:
                            connectorRef: account.Diego_Git
                            gitFetchType: Branch
                            paths:
                              - envs/qa/values.yaml
                            repoName: values-k8s
                            branch: main
                variables: []
            serviceRef: BankingAppUI
          infrastructure:
            environmentRef: qa
            infrastructureDefinition:
              type: KubernetesDirect
              spec:
                connectorRef: account.cddemose
                namespace: qa
                releaseName: banking-app-release-prod
            allowSimultaneousDeployments: false
            infrastructureKey: banking-app-k8s
          execution:
            steps:
              - stepGroup:
                  name: Canary Deployment
                  identifier: canaryDepoyment
                  steps:
                    - step:
                        name: Canary Deployment
                        identifier: canaryDeployment
                        type: K8sCanaryDeploy
                        timeout: 10m
                        spec:
                          instanceSelection:
                            type: Count
                            spec:
                              count: 1
                          skipDryRun: false
                    - step:
                        type: Http
                        name: Check Health
                        identifier: Check_Health
                        spec:
                          method: GET
                          headers: []
                          outputVariables: []
                          url: http://34.121.70.58/<+pipeline.variables.serviceName>/<+env.name>/index.html
                        timeout: 10s
                    - step:
                        name: Canary Delete
                        identifier: canaryDelete
                        type: K8sCanaryDelete
                        timeout: 10m
                        spec: {}
                  rollbackSteps:
                    - step:
                        name: Canary Delete
                        identifier: canaryDelete
                        type: K8sCanaryDelete
                        timeout: 10m
                        spec: {}
              - stepGroup:
                  name: Primary Deployment
                  identifier: primaryDepoyment
                  steps:
                    - step:
                        name: Rolling Deployment
                        identifier: rollingDeployment
                        type: K8sRollingDeploy
                        timeout: 10m
                        spec:
                          skipDryRun: false
                  rollbackSteps:
                    - step:
                        name: Rolling Rollback
                        identifier: rollingRollback
                        type: K8sRollingRollback
                        timeout: 10m
                        spec: {}
            rollbackSteps: []
          serviceDependencies: []
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
        when:
          pipelineStatus: Success
          condition: <+pipeline.variables.gitEvent> == "PUSH" && <+pipeline.variables.tag> == "qa"
    - stage:
        name: Integration Load Test and Push Prod
        identifier: Integration_Test
        type: CI
        spec:
          cloneCodebase: true
          infrastructure:
            useFromStage: Build_Container_and_Push
          execution:
            steps:
              - step:
                  type: Run
                  name: Integration Load BankingApp Test
                  identifier: Function_BankingApp_Test
                  spec:
                    connectorRef: account.DockerHubDiego
                    image: maven:alpine
                    command: |-
                      apk add git

                      git clone https://github.com/diegopereiraeng/selenium-tests-ci.git

                      cd selenium-tests-ci

                      mvn test -Dtest=io.harness.sel.test.BankingAppTest
                    privileged: true
                    reports:
                      type: JUnit
                      spec:
                        paths:
                          - "**/*.xml"
                  when:
                    stageStatus: Success
                    condition: <+pipeline.variables.gitEvent> == "PR"
                  failureStrategies: []
              - step:
                  type: BuildAndPushDockerRegistry
                  name: Build and Push QA
                  identifier: Build_and_Push_QA
                  spec:
                    connectorRef: account.DockerHubDiego
                    repo: diegokoala/harness-ff-bankingapp
                    tags:
                      - prod
                    buildArgs:
                      FFKEY: 44e3ffcb-3a5e-4af1-a7f3-ba7a51cbc74b
                    optimize: true
                  when:
                    stageStatus: Success
                    condition: <+pipeline.variables.gitEvent> == "PUSH"
                  failureStrategies: []
          serviceConfig:
            serviceRef: ""
            serviceDefinition:
              type: Kubernetes
              spec:
                variables: []
        when:
          pipelineStatus: Success
          condition: <+pipeline.variables.tag> == "prod"
        variables: []
    - stage:
        name: Approval to Prod
        identifier: Approval_to_Prod
        description: ""
        type: Approval
        spec:
          execution:
            steps:
              - step:
                  name: Approval
                  identifier: approval
                  type: HarnessApproval
                  timeout: 1d
                  spec:
                    approvalMessage: |-
                      Please review the following information
                      and approve the pipeline progression
                    includePipelineExecutionHistory: true
                    approvers:
                      minimumCount: 1
                      disallowPipelineExecutor: false
                      userGroups:
                        - account.SE_Admin
                        - account.Viewers
                    approverInputs:
                      - name: Message
                        defaultValue: ""
        tags: {}
        when:
          pipelineStatus: Success
          condition: <+pipeline.variables.gitEvent> == "PUSH" && <+pipeline.variables.tag> == "prod"
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
    - stage:
        name: Deploy Banking App Prod
        identifier: Deploy_Banking_App_Prod
        description: ""
        type: Deployment
        spec:
          serviceConfig:
            serviceDefinition:
              type: Kubernetes
              spec:
                artifacts:
                  sidecars: []
                  primary:
                    type: DockerRegistry
                    spec:
                      connectorRef: account.DockerHubDiego
                      imagePath: diegokoala/harness-ff-bankingapp
                      tag: prod
                manifestOverrideSets: []
                manifests:
                  - manifest:
                      identifier: K8sBankingApp
                      type: K8sManifest
                      spec:
                        store:
                          type: Github
                          spec:
                            connectorRef: account.Diego_Git
                            gitFetchType: Branch
                            paths:
                              - templates/envs/prod/deployment.yaml
                              - templates/envs/prod/namespace.yaml
                              - templates/envs/prod/service.yaml
                            repoName: k8s-manifests-templates
                            branch: main
                        skipResourceVersioning: false
                  - manifest:
                      identifier: Values
                      type: Values
                      spec:
                        store:
                          type: Github
                          spec:
                            connectorRef: account.Diego_Git
                            gitFetchType: Branch
                            paths:
                              - envs/prod/values.yaml
                            repoName: values-k8s
                            branch: main
                variables: []
            serviceRef: BankingAppUI
          infrastructure:
            environmentRef: prod
            infrastructureDefinition:
              type: KubernetesDirect
              spec:
                connectorRef: account.cddemose
                namespace: prod
                releaseName: banking-app-release-prod
            allowSimultaneousDeployments: false
            infrastructureKey: banking-app-k8s
          execution:
            steps:
              - stepGroup:
                  name: Canary Deployment
                  identifier: canaryDepoyment
                  steps:
                    - step:
                        name: Canary Deployment
                        identifier: canaryDeployment
                        type: K8sCanaryDeploy
                        timeout: 10m
                        spec:
                          instanceSelection:
                            type: Count
                            spec:
                              count: 1
                          skipDryRun: false
                    - step:
                        type: Http
                        name: Check Health
                        identifier: Check_Health
                        spec:
                          method: GET
                          headers: []
                          outputVariables: []
                          url: http://34.121.70.58/<+pipeline.variables.serviceName>/index.html
                        timeout: 10s
                    - step:
                        name: Canary Delete
                        identifier: canaryDelete
                        type: K8sCanaryDelete
                        timeout: 10m
                        spec: {}
                  rollbackSteps:
                    - step:
                        name: Canary Delete
                        identifier: canaryDelete
                        type: K8sCanaryDelete
                        timeout: 10m
                        spec: {}
              - stepGroup:
                  name: Primary Deployment
                  identifier: primaryDepoyment
                  steps:
                    - step:
                        name: Rolling Deployment
                        identifier: rollingDeployment
                        type: K8sRollingDeploy
                        timeout: 10m
                        spec:
                          skipDryRun: false
                  rollbackSteps:
                    - step:
                        name: Rolling Rollback
                        identifier: rollingRollback
                        type: K8sRollingRollback
                        timeout: 10m
                        spec: {}
            rollbackSteps: []
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
        when:
          pipelineStatus: Success
          condition: <+pipeline.variables.gitEvent> == "PUSH" && <+pipeline.variables.tag> == "prod"
  variables:
    - name: tag
      type: String
      value: <+input>
    - name: serviceName
      type: String
      value: banking-app
    - name: ffkey
      type: String
      value: <+input>
    - name: virtualPath
      type: String
      value: <+input>
    - name: VirtualPathQA
      type: String
      value: <+pipeline.variables.virtualPath>-qa
    - name: gitEvent
      type: String
      value: <+input>
    - name: target
      type: String
      value: <+input>
    - name: ffkey_prod
      type: String
      value: 44e3ffcb-3a5e-4af1-a7f3-ba7a51cbc74b
    - name: branch
      type: String
      value: <+input>
