pipeline:
  name: Harness-AIDA-CI
  identifier: HarnessAIDACI
  projectIdentifier: GIT_FLOW_DEMO
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: account.diegogithubapp
        repoName: harness-aida
        build: <+input>
  stages:
    - stage:
        name: Build Java
        identifier: Build_Java
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - step:
                  type: RunTests
                  name: Run Tests - Package
                  identifier: Run_Tests_Package
                  spec:
                    language: Java
                    buildTool: Maven
                    args: package
                    runOnlySelectedTests: true
                    reports:
                      type: JUnit
                      spec:
                        paths:
                          - "**/*.xml"
              - parallel:
                  - step:
                      type: Sonarqube
                      name: Sonarqube
                      identifier: Sonarqube
                      spec:
                        mode: orchestration
                        config: default
                        target:
                          name: <+pipeline.properties.ci.codebase.repoName>
                          type: repository
                          variant: <+codebase.branch>
                          workspace: /harness
                        advanced:
                          log:
                            level: debug
                          fail_on_severity: high
                        auth:
                          access_token: a
                          domain: http://sonar.harness-demo.site
                          ssl: false
                        tool:
                          java:
                            binaries: target/classes
                          project_key: <+pipeline.properties.ci.codebase.repoName>
                  - step:
                      type: Security
                      name: Sonar
                      identifier: Sonar
                      spec:
                        privileged: true
                        settings:
                          policy_type: orchestratedScan
                          scan_type: repository
                          product_name: sonarqube
                          product_config_name: default
                          product_access_token: <+secrets.getValue("account.harnesssonartoken")>
                          product_project_key: <+pipeline.properties.ci.codebase.repoName>
                          bypass_ssl_check: "true"
                          log_level: DEBUG
                          verify_ssl: "false"
                          repository_project: <+pipeline.properties.ci.codebase.repoName>
                          product_domain: http://sonar.harness-demo.site
                          repository_branch: <+codebase.branch>
                          product_java_binaries: target/classes
