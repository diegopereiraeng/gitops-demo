pipeline:
  name: MATRIX - Product Release Pipeline
  identifier: MATRIX_Product_Release_Pipeline
  projectIdentifier: GIT_FLOW_DEMO
  orgIdentifier: default
  description: Multi Service Scenario using Git as catalog of product release
  tags: {}
  stages:
    - stage:
        name: Deploy Multi Services
        identifier: Deploy_Multi_Services
        description: ""
        type: Deployment
        spec:
          deploymentType: NativeHelm
          services:
            values:
              - serviceRef: prometheusmongodbexporterbankingvalidation
                serviceInputs:
                  serviceDefinition:
                    type: NativeHelm
                    spec:
                      artifacts:
                        primary:
                          primaryArtifactRef: <+input>
                          sources: <+input>
              - serviceRef: catalogservice
                serviceInputs:
                  serviceDefinition:
                    type: NativeHelm
                    spec:
                      artifacts:
                        primary:
                          primaryArtifactRef: <+input>
                          sources: <+input>
            metadata:
              parallel: true
          environment:
            environmentRef: <+input>
            deployToAll: false
            environmentInputs: <+input>
            serviceOverrideInputs: <+input>
            infrastructureDefinitions: <+input>
          execution:
            steps:
              - step:
                  type: ShellScript
                  name: ShellScript_1
                  identifier: ShellScript_1
                  spec:
                    shell: Bash
                    onDelegate: true
                    source:
                      type: Inline
                      spec:
                        script: echo "<+service.name>>"
                    environmentVariables: []
                    outputVariables: []
                  timeout: 10m
              - step:
                  name: Helm Deployment
                  identifier: helmDeployment
                  type: HelmDeploy
                  timeout: 10m
                  spec:
                    skipDryRun: false
                    ignoreReleaseHistFailStatus: false
                  when:
                    stageStatus: Success
                    condition: "\"1\" == \"2\""
                  failureStrategies: []
            rollbackSteps:
              - step:
                  name: Helm Rollback
                  identifier: helmRollback
                  type: HelmRollback
                  timeout: 10m
                  spec: {}
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
