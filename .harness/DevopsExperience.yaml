pipeline:
  name: DevopsExperience
  identifier: DevopsExperience
  projectIdentifier: GIT_FLOW_DEMO
  orgIdentifier: default
  tags: {}
  stages:
    - stage:
        name: Deploy Prod
        identifier: Deploy_Prod
        description: ""
        type: Deployment
        spec:
          deploymentType: Kubernetes
          service:
            serviceRef: <+input>
            serviceInputs: <+input>
          environment:
            environmentRef: <+input>
            deployToAll: false
            environmentInputs: <+input>
            serviceOverrideInputs: <+input>
            infrastructureDefinitions: <+input>
          execution:
            steps:
              - step:
                  type: TerraformPlan
                  name: Terraform Plan
                  identifier: Terraform_Plan
                  spec:
                    provisionerIdentifier: tfdns<+pipeline.variables.virtualPath>
                    configuration:
                      command: Apply
                      configFiles:
                        store:
                          spec:
                            connectorRef: account.diegogithubapp
                            repoName: terraform-onboarding-payments-validation
                            gitFetchType: Branch
                            branch: main
                            folderPath: banking-demo-dns
                          type: Github
                      environmentVariables:
                        - name: GOOGLE_CREDENTIALS
                          value: <+secrets.getValue("diego_gc_sa_text")>
                          type: String
                      varFiles:
                        - varFile:
                            spec:
                              content: |-
                                project="<+secrets.getValue("salesproject")>"
                                region="us-central1-c"
                                gitUser="<+pipeline.variables.virtualPath>"
                                ipAddress="<+secrets.getValue("demoip")>"
                            identifier: vars
                            type: Inline
                      secretManagerRef: harnessSecretManager
                      workspace: <+env.name>
                  timeout: 10m
              - step:
                  type: HarnessApproval
                  name: HarnessApproval_1
                  identifier: HarnessApproval_1
                  spec:
                    approvalMessage: Please review the following information and approve the pipeline progression
                    includePipelineExecutionHistory: true
                    approvers:
                      userGroups:
                        - account.Field_Engineering
                      minimumCount: 1
                      disallowPipelineExecutor: false
                    approverInputs:
                      - name: motivo
                        defaultValue: coloque o motivo aqui
                  timeout: 1d
              - step:
                  type: TerraformApply
                  name: TerraformApply_1
                  identifier: TerraformApply_1
                  spec:
                    provisionerIdentifier: tfdns<+pipeline.variables.virtualPath>
                    configuration:
                      type: InheritFromPlan
                  timeout: 10m
              - stepGroup:
                  name: Canary Deployment
                  identifier: canaryDepoyment
                  steps:
                    - step:
                        name: Canary Deployment
                        identifier: canaryDeployment
                        type: K8sCanaryDeploy
                        timeout: 10m
                        spec:
                          instanceSelection:
                            type: Count
                            spec:
                              count: 1
                          skipDryRun: false
                    - step:
                        type: Verify
                        name: Verify_1
                        identifier: Verify_1
                        spec:
                          isMultiServicesOrEnvs: false
                          type: Canary
                          monitoredService:
                            type: Default
                            spec: {}
                          spec:
                            sensitivity: HIGH
                            duration: 5m
                            deploymentTag: <+artifacts.primary.tag>
                        timeout: 2h
                        failureStrategies:
                          - onFailure:
                              errors:
                                - Verification
                              action:
                                type: ManualIntervention
                                spec:
                                  timeout: 2h
                                  onTimeout:
                                    action:
                                      type: StageRollback
                          - onFailure:
                              errors:
                                - Unknown
                              action:
                                type: ManualIntervention
                                spec:
                                  timeout: 2h
                                  onTimeout:
                                    action:
                                      type: Ignore
                        when:
                          stageStatus: Success
                          condition: <+pipeline.variables.firstDeploy> == "no"
                    - step:
                        name: Canary Delete
                        identifier: canaryDelete
                        type: K8sCanaryDelete
                        timeout: 10m
                        spec: {}
              - stepGroup:
                  name: Primary Deployment
                  identifier: primaryDepoyment
                  steps:
                    - step:
                        name: Rolling Deployment
                        identifier: rollingDeployment
                        type: K8sRollingDeploy
                        timeout: 10m
                        spec:
                          skipDryRun: false
            rollbackSteps:
              - step:
                  name: Canary Delete
                  identifier: rollbackCanaryDelete
                  type: K8sCanaryDelete
                  timeout: 10m
                  spec: {}
              - step:
                  name: Rolling Rollback
                  identifier: rollingRollback
                  type: K8sRollingRollback
                  timeout: 10m
                  spec: {}
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
  variables:
    - name: virtualPath
      type: String
      description: ""
      value: <+service.name>
    - name: FF_Key
      type: String
      description: ""
      value: <+secrets.getValue("ffkeydevopsexperience”)>
    - name: firstDeploy
      type: String
      default: "no"
      description: ""
      value: <+input>.allowedValues(yes,no)
